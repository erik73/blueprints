---
# This automation simulates the use of the IKEA TRADFRI Dimmer control
# connected through ZHA.

# | Button      | Action                          |
# | ----------- | --------------------------------|
# | on (short)  | Turn on a switch and a light    |
# | off (short) | Turn off a switch and a light   |
# | on (long)   | Increase brightness             |
# | off (long)  | Decrease brightness             |

blueprint:
  source_url: https://github.com/erik73/blueprints/blob/main/zha_ikea_tradfri_2button_remote_switch_brightness.yaml

  name: ZHA - IKEA TRADFRI - 2 Button Remote - Switch OnOff and Light Brightness

  description: >-
    This automation simulates the use of the IKEA TRADFRI on/off switch
    connected through ZHA.

  domain: automation

  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control you wish to use.
      selector:
        device:
          integration: zha
          manufacturer: IKEA of Sweden
          model: TRADFRI on/off switch
    switch:
      name: Switch
      description: Select the switch entity you wish to control.
      selector:
        entity:
          domain: switch
    light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        entity:
          domain: light
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100
          max: 1000
          step: 100
          unit_of_measurement: milliseconds
          mode: slider
      default: 500

mode: restart
max_exceeded: silent

variables:
  var_speed: !input speed

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - choose:
      # Short-Press the on button
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "on" }}'
        sequence:
          - service: switch.turn_on
            target:
              entity_id: !input switch
            data:
              transition: "{{ (var_speed / 1000)|float }}"
          - service: light.turn_on
            target:
                    entity_id: !input light

      # Long-Press the on button
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move_with_on_off" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: 10
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: !input speed

      # Short-Press the off button
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "off" }}'
        sequence:
          - service: switch.turn_off
            target:
              entity_id: !input switch
            data:
              transition: "{{ (var_speed / 1000)|float }}"
          - service: light.turn_off
            target:
                    entity_id: !input light

      # Long-Press the off button
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: -10
                    transition: "{{ (var_speed / 1000)|float }}"
                - delay:
                    milliseconds: !input speed

    # Any other event will cancel the repeat loops (i.e. releasing the [on|off] button)
    default: []